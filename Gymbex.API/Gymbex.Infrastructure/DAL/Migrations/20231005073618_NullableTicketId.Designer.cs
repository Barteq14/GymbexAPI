// <auto-generated />
using System;
using Gymbex.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gymbex.Infrastructure.DAL.Migrations
{
    [DbContext(typeof(GymbexDbContext))]
    [Migration("20231005073618_NullableTicketId")]
    partial class NullableTicketId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gymbex.Core.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TicketId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActivityId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CustomerId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId1");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ImportantFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ImportantTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Customer", b =>
                {
                    b.HasOne("Gymbex.Core.Entities.Activity", null)
                        .WithMany("Customers")
                        .HasForeignKey("ActivityId");

                    b.HasOne("Gymbex.Core.Entities.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Reservation", b =>
                {
                    b.HasOne("Gymbex.Core.Entities.Activity", "Activity")
                        .WithMany("Reservations")
                        .HasForeignKey("ActivityId1");

                    b.HasOne("Gymbex.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.Navigation("Activity");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Gymbex.Core.Entities.Activity", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
